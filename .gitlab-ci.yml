---
cache:
  paths:
    - .cache/pip
    - env

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

stages:
  - build
  - validate
  - publish

unit-tests:
  stage: validate
  image: harbor.ptech.lu/docker-hub/library/python:3.6.15-slim-buster
  script:
    - pip install .[dev]
    - pytest
      --cov-branch
      --cov-report html
      --cov-report xml
      --cov-report term
      --cov puresnmp

vulnerability-checks:
  image: harbor.ptech.lu/gitlab-actions/bandit:release-1.7.1
  stage: validate
  variables:
    BANDIT_PATH: puresnmp
  script:
    - /run.sh

# NOTE: Our current sonarqube server is unreachanble from git.ptech.lu
#
# sonar-qube:
#   image: harbor.ptech.lu/gitlab-actions/sonar-scanner:release-2022.04.20.03
#   stage: validate
#   variables:
#     SONARQUBE_ACCEPT_STATES: OK,WARN
#     SONARQUBE_LOGSTASH: logstash.ipsw.dt.ept.lu:5001
#     SONARQUBE_PROJECT_VERSION: "${PTECH_PROJECT_VERSION}"
#   needs:
#     # "build-package" provides the PTECH_PROJECT_VERSION variable
#     - build-package
#   script:
#     - /run.sh

code-quality:
  image: harbor.ptech.lu/gitlab-actions/pre-commit:release-2.18.1-ptech-2
  stage: validate
  script:
    - /run.sh

cve:
  image: harbor.ptech.lu/gitlab-actions/safety:release-1.10.3
  stage: validate
  script:
    - /run.sh

build-package:
  image: harbor.ptech.lu/gitlab-actions/pyproject-build:release-2022.04.29.01
  stage: build
  script:
    - /run.sh
  artifacts:
    reports:
      dotenv: "${CI_PROJECT_DIR}/job-${CI_JOB_ID}.env"
    paths:
      - dist

docs:
  image:
    name: harbor.ptech.lu/gitlab-actions/sphinx:release-4.5.0-ptech-2
    entrypoint: [""]
  stage: build
  variables:
    SPHINX_ROOT: docs
  artifacts:
    paths:
      - artifacts
  script:
    - pip install .[dev]
    - /run.sh

publish-to-github:
  stage: publish
  variables:
    GIT_STRATEGY: clone
  image: harbor.ptech.lu/gitlab-actions/push-to-github:release-2022.04.29.04
  script:
    - /run.sh
